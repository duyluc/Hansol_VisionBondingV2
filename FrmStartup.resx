<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARMAAAC3CAMAAAAGjUrGAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAClUExURf///1lXWBJvtROSQ1VTVFJQUVhXV93d3Xp5eVBOT+Dg4KKhoePj40pISZKSkqinqNTT
        0/Pz88zLzHZ0dcPDwwBmqz6YX5rB2svq2C+QUQCENajI2T19sCtyq8zk7rq6umVjZOzs7LTbxbW0tImH
        iGhmZ52bnEE/QIF/gG9ubo2LjNDx27PN2un09x9sppaVlTBzo8Ddy+348jiMWCiHTQCCMjo4OTTFLToA
        AAevSURBVHhe7Zpre6M2EIWtVgJD8AIxbbfdtoZiHONe0vv//2nVZZAGg5Owl5KnPe+HzXoQQnMkjTSC
        DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgf8NM7zk8/k9kSV4yY
        jER5ILvhnoyvl4ZaaijJdpNfv+D88j2ZLadd4tndkZGIH+iCZrcn4+ulYK5c9e6Ubz/jfDfS5E4JT5KT
        kUh3dEEjt2R8vRQJtVWI6KNpoqCJ5b+kSXAFmhAYJ1OgyRRoMsVoErnWQhMC42QKNJnyCjQpm7SoDjol
        uo+zhmxP0cSmdNzcSkV0fXFRFLqyp5KVsimqtm2rIpuUWluTsnrc1pKSCyX6S5vRFUdxGGhd86pLrWzZ
        etvOKFjkx72rT4l6++ZwQ+T4tBWmkEbsTwVZiXU1iY+67ZKuGKTUSWJFVw0Xn489mEqreufLa8+vnpPl
        kb4c6pNK1zaTh1d9qMWU2nUHumJZU5PyJNhNHqkuoXff+BJJuymPV+WTIx/4eR2c8Uh5Ho+8TXwedYNB
        qj1zfpEmT50VPKMJrfdck3I/44Il2XtRRppsJzcopvCRKc9RUUpFLNV8R4iWri/U5N1XnHejM6XF46Tp
        59rmCK4GTVR+nNFQK+Uop4INSME8y28oJ3YnKrFMk6fgmojuvGWc92ysek0eb0uiGzjElKCJqOmvH3IG
        2dHsuVMj+wg2mlp5s5iPTp9GEz2LR5DVMGiScp12qq71P/RTI7fkKtNknsSFx5KNEh2nEx1dk/AENQRa
        5u4URR3xiTS5zaDJKZRPzvdGgTSPgheSGjPRhOtrkEdbrg1+yG2lw1EZt7UvS4U2TTBpo16uJRNOi+LC
        2GqadKHBl2HxKIbp4bv/ShOpRNfV4yDZ27tDuageqkuZAs52x4aJ6ts4i9s9q0w92lJradL4UCe9D7y3
        FR1zjzRRtdmDlfGJx8naLLXlOUjsHDPkCc1dubO+ZUFzoYaQ2rLKlC22libFTrdURFJGiY/3xkqlhHrj
        LFwTuR/Uy/mIN7tQrknvymjinqL8trdbVdbGJLxaYJW5p66lSRl7wgZtUyXDqqAuzjIaJ6GB2+CHtPEz
        aKJngB94pcf+pAIa2YWnlmxZrI15tXgyRxlcndGEde0opFpN/MquRVXiVIT5GIjDLPHbGkMVKrML1KvR
        ROepbc86e6qJm+wO1mynySEYNDoUH/P764yXCbljg3NThjBjw9gr0KSMq/Z03Os8lW2nppqE9USThma7
        vYfZn0R8O6bzP9Ef84olO2z5F2RysGBkWvdpNBmSf2J0iWtSFu0x2unUl2ezlqkmfhtnaEKVbpyYQeA1
        Gf5Kkxh3/kiBuX4mk4O1vdY/F73feQquiTzSG2gi59eCJk3eC+UvOUfInWhGE7/qaKaabN5Q7/LBYpCq
        dvtTFkvZem1oWW365yJNfvuB89vvZLZwTa5zwIxtAYImbTTaRI5Zrskmf2BN4EgXncsQrobdD3EINyb6
        IYvmzh/fcP58S2bLU5rM5cUzJwV6l+p5TpNws9dkE1/EDZVtevciTZTRJPx8XpMvP+d8vUQTP6IHTc6s
        vJHDHBUewiR7H03MQdteVzWji/lmYmalJ9jcMcH339LEQ5qwHXWkI/L+roq1y6HD3k8TTXafn4XOi8fC
        KJMEhlM6FtQMbEHq9M9Fc+fjadJ09FMjw8rgdxnPxtibmliyw2krxrKkoyaaUBoIA8gm0Ctpcs982ob9
        E8sBP0gTTZm1HWtSotcetl91OSHRBPFsy1fShI1Wm9cSwbxQkzLzsFKX8BTTpJCLh6zYkIfKbEK5kibH
        8WglQhSM5DJNDqImBHt24zbtJr7bJrHcgTmb1WEBsIcxK2nCZjA5b8jIplk4TsJcHG40sF2aTfpYUsR2
        xbYtThZ3JLuSJmybzVzlY32ZJhnbvYa3ejFZNMqesvAks3blit5W5e63RwVraRJcFdK/g6u0kXxbuu6Y
        WUe3ym54ndOE0UjesigrpNiecr08hTLDCcJKmrC0XcjcOhuPXm4sjCc8TkpxV5TmjJqtO4PEo52i3iiO
        1mtpEkDNSpqwUa2LJ3XfiVH27DPXl2pS0i+L0om2Tsf5CKDFreQH91dIN5ZW04QtPBZzNkv/dUj63Pql
        mvCcZUo4ootvixINgWgtTdg5YECGxthNtubFmmwe52p07Nh6H8++LtYBzEZhy1qaTPs1Eqq/Z53oRvvL
        NTFvLsg0RiZ37M5NM/2sQJOwrw9W02TTXnWYlOeGn6y7g6AFmmyqbsZbqbrh3TNRHq5SIXNI4eK8Y5Em
        f/xFRyeGv8bnJ6eHnedhfDyxif+mCwb/+iU96zDoGmc+xTkb386+lgcXZC+h2uFtuSFjT/OaaG97X6VB
        V5v0Bz5IHGXb78zrMCrDjictBav8WU3e/sh5Ozpna1LKNzTp6BEadi1j6U2an/s6ikTXH+mTLZa3OEND
        PwzWQJDJMPI5bS/7LnKrbL2/tKNPTxjmG6+uFnW3P+Zhk+eYNOJfpknjOJ1+ZvchlJn7xi9+ptqyydKn
        vwMEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA18Jm8w+o+6T1kgjYnQAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>