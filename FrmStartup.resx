<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>